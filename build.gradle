//file:noinspection GroovyAssignabilityCheck
//file:noinspection GroovyAccessibility
//file:noinspection GradlePackageVersionRange
//file:noinspection GroovyUnusedAssignment
plugins {
    id "fabric-loom" version "1.3-SNAPSHOT"
    id "io.github.juuxel.loom-quiltflower" version "1.+" // Quiltflower, a better decompiler
    id "io.github.p03w.machete" version "1.+" // automatic jar compressing on build
    id "maven-publish"
}
String mod_id = project["mod_id"]
version = project["mod_version"]
group = project["maven_group"]
base {
    archivesBaseName = project["archives_base_name"]
}
repositories {
    mavenLocal()
    mavenCentral()
    gradlePluginPortal()
    maven { url = "https://mvn.devos.one/snapshots/" }
    maven { url = "https://mvn.devos.one/#/snapshots/" }// Create, Porting Lib, Forge Tags, Milk Lib, Registrate
    maven { url = "https://maven.quiltmc.org/repository/release" }
    maven { url = "https://hephaestus.dev/release" }
    maven { url = "https://api.modrinth.com/maven" }// LazyDFU
    maven { url = "https://cursemaven.com" }// Forge Config API Port, Farmer's Delight
    maven { url = "https://maven.parchmentmc.org" }// Parchment mappings
    maven { url = "https://maven.fabricmc.net/" }
    maven { url = "https://maven.tterrag.com/" }// Flywheel
    maven { url = "https://storage.googleapis.com/devan-maven/" }
    maven { url = "https://maven.shedaniel.me/" }// Cloth Config, REI
    maven { url = "https://aperlambda.github.io/maven" }
    maven { url = "https://maven.kotlindiscord.com/repository/terraformers/" }
    maven { url = "https://maven.cafeteria.dev/releases/" }
    maven { url = "https://jitpack.io/" }// Mixin Extras, Fabric ASM
    maven { url = "https://maven.gegy.dev" }
    maven { url = "https://dvs1.progwml6.com/files/maven/" }// JEI
    maven { url = "https://modmaven.dev" }
    maven { url = "https://maven.gudenau.net" }
    maven { url = "https://maven.blamejared.com/vazkii/botania/Botania/" }
    maven { url = "https://maven.kyrptonaught.dev/" }
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" }// Reach Entity Attributes
    maven { url = "https://maven.quiltmc.org/repository/release" } // Quilt Mappings
    maven { url = 'https://maven.nova-committee.cn/releases' }
    maven { url = "https://server.bbkr.space/artifactory/libs-release/" }
    maven {
        name = "firstdarkMavenSnapshots"
        url = "https://maven.firstdarkdev.xyz/snapshots/"
    } // gtceu, LDLib
    maven {
        name = "Fuzs Mod Resources"
        url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
    }// Forge Config Api Port
    maven {
        name = "Nyan Maven"
        url = "https://maven.hendrixshen.top"
    }
    maven {
        name "Modmaven"
        url "https://modmaven.dev/"
        // For Gradle 5.1 and above, limit it to just AE2
        content {
            includeGroup 'appeng'
        }
    }//AE2
    maven {
        name = "Ladysnake Libs"
        url = 'https://maven.ladysnake.org/releases'
    }//Trinkets
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
    }// Mod Menu, Trinkets
}
loom {
//    splitEnvironmentSourceSets()
    mods {
        it.create(mod_id) {
            sourceSet(sourceSets["main"])
//            sourceSet(sourceSets["client"])
        }
    }
    accessWidenerPath = file("src/main/resources/${mod_id}.accesswidener")
    runs {
        // This adds a new gradle task that runs the datagen API: "gradlew runDatagenClient"
        datagenClient {
            inherit client
            name "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
            vmArg "-Dfabric-api.datagen.modid=${project["mod_id"]}"
            runDir "build/datagen"
        }
    }
}
dependencies {
    minecraft("com.mojang:minecraft:${project["minecraft_version"]}")
    mappings loom.layered() {
        it.mappings("net.fabricmc:yarn:${project["yarn_mappings"]}:v2")
        it.mappings(file("my_mappings.txt"))
    }
    for (f in [
      "net.fabricmc:fabric-loader:${project["fabric_loader_version"]}",
      "net.fabricmc.fabric-api:fabric-api:${project["fabric_api_version"]}",
      "com.simibubi.create:create-fabric-${project["minecraft_version"]}:${project["create_version"]}",
    ]) {
        modImplementation(f)
    }
    for (f in [
      "me.shedaniel:RoughlyEnoughItems-fabric:${project["rei_version"]}",
    ]) {
        modCompileOnly(f)
        modLocalRuntime(f)
    }
    for (f in [
      "dev.emi:emi-fabric:${project["emi_version"]}",
      files("D:\\CCC\\Documents\\local_maven\\farmers-delight-fabric-mc${project["farmersdelight_version"]}.jar"),
    ]) {
        modCompileOnly(f)
    }
}
processResources {
    inputs.property "version", project["version"]
    filesMatching("fabric.mod.json") {
        expand "version": project["version"]
    }
}
tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}
java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}
jar {
    from("LICENSE") {
        rename { "${it}_${base.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for retrieving dependencies.
        mavenLocal()
    }
}

// Adds the generated files into the jar you distribute to players.
sourceSets {
    main {
        resources {
            srcDirs += ['src/main/generated']
        }
    }
}