//file:noinspection GroovyAssignabilityCheck
//file:noinspection GroovyAccessibility
//file:noinspection GradlePackageVersionRange
//file:noinspection GroovyUnusedAssignment
plugins {
    id "fabric-loom" version "1.3-SNAPSHOT"
    id "io.github.juuxel.loom-quiltflower" version "1.+" // Quiltflower, a better decompiler
    id "io.github.p03w.machete" version "1.+" // automatic jar compressing on build
    id "maven-publish"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    mavenLocal()
    mavenCentral()
    gradlePluginPortal()
    maven { url = "https://mvn.devos.one/snapshots/" }
    maven { url = "https://mvn.devos.one/#/snapshots/" }// Create, Porting Lib, Forge Tags, Milk Lib, Registrate
    maven { url = "https://maven.quiltmc.org/repository/release" }
    maven { url = "https://hephaestus.dev/release" }
    maven { url = "https://api.modrinth.com/maven" }// LazyDFU
    maven { url = "https://cursemaven.com" }// Forge Config API Port, Farmer's Delight
    maven { url = "https://maven.parchmentmc.org" }// Parchment mappings
    maven { url = "https://maven.fabricmc.net/" }
    maven { url = "https://maven.tterrag.com/" }// Flywheel
    maven { url = "https://storage.googleapis.com/devan-maven/" }
    maven { url = "https://maven.shedaniel.me/" }// Cloth Config, REI
    maven { url = "https://aperlambda.github.io/maven" }
    maven { url = "https://maven.kotlindiscord.com/repository/terraformers/" }
    maven { url = "https://maven.cafeteria.dev/releases/" }
    maven { url = "https://jitpack.io/" }// Mixin Extras, Fabric ASM
    maven { url = "https://maven.gegy.dev" }
    maven { url = "https://dvs1.progwml6.com/files/maven/" }// JEI
    maven { url = "https://modmaven.dev" }
    maven { url = "https://maven.gudenau.net" }
    maven { url = "https://maven.blamejared.com/vazkii/botania/Botania/" }
    maven { url = "https://maven.kyrptonaught.dev/" }
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" }// Reach Entity Attributes
    maven { url = "https://maven.quiltmc.org/repository/release" } // Quilt Mappings
    maven { url = 'https://maven.nova-committee.cn/releases' }
    maven { url = "https://server.bbkr.space/artifactory/libs-release/" }
    maven {
        name = "firstdarkMavenSnapshots"
        url = "https://maven.firstdarkdev.xyz/snapshots/"
    } // gtceu, LDLib
    maven {
        name = "Fuzs Mod Resources"
        url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
    }// Forge Config Api Port
    maven {
        name = "Nyan Maven"
        url = "https://maven.hendrixshen.top"
    }
    maven {
        name "Modmaven"
        url "https://modmaven.dev/"
        // For Gradle 5.1 and above, limit it to just AE2
        content {
            includeGroup 'appeng'
        }
    }//AE2
    maven {
        name = "Ladysnake Libs"
        url = 'https://maven.ladysnake.org/releases'
    }//Trinkets
    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
    }// Mod Menu, Trinkets
}

dependencies {
    // Setup
    minecraft("com.mojang:minecraft:${minecraft_version}")
    mappings loom.layered() {
        it.mappings(file("src/main/resources/my_mappings.txt"))
        it.mappings("net.fabricmc:yarn:${yarn_mappings}:v2")
        it.mappings(file("src/main/resources/my_mappings.txt"))
    }
//    mappings("net.fabricmc:yarn:${yarn_mappings}:v2")
    modImplementation("net.fabricmc:fabric-loader:${fabric_loader_version}")
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}"
//    modCompileOnly("dev.emi:emi-fabric:${emi_version}:api")
//    modLocalRuntime("dev.emi:emi-fabric:${emi_version}")
    modCompileOnlyApi("me.shedaniel:RoughlyEnoughItems-fabric:${rei_version}")
//    modCompileOnlyApi("me.shedaniel:RoughlyEnoughItems-default-plugin-fabric:${rei_version}")
    modLocalRuntime("me.shedaniel:RoughlyEnoughItems-fabric:${rei_version}")

    // 真是不知道ForgeConfigAPIPort出了什么鸟问题。
    modImplementation("com.simibubi.create:create-fabric-${minecraft_version}:${create_version}")// {
//        exclude(Map.of("module", "forge-config-api-port-fabric-547434"))
//    }
//    modCompileOnlyApi("curse.maven:farmersdelightfabric-482834:${farmersdelight_version}")//这句是从https://github.com/ianm1647/expandeddelight/blob/1.19/build.gradle抄的。
    modCompileOnlyApi(files("D:\\CCC\\Documents\\local_maven\\farmers-delight-fabric-mc${farmersdelight_version}.jar"))
////    modLocalRuntime(files("D:\\CCC\\Documents\\local_maven\\ForgeConfigAPIPort-v4.2.10-1.19.2-Fabric.jar"))
////    modLocalRuntime(files("D:\\CCC\\Documents\\local_maven\\core-3.6.5.jar"))
////    modLocalRuntime(files("D:\\CCC\\Documents\\local_maven\\toml-3.6.5.jar"))
//
////    modImplementation "net.minecraftforge:forgeconfigapiport-fabric:${forgeconfigapiport}"
////    modCompileOnly("maven.modrinth:lazydfu:${lazydfu_version}")
////    modLocalRuntime("com.terraformersmc:modmenu:${modmenu_version}")
////    // Recipe Viewers - Create Fabric supports JEI, REI, and EMI.
////    // See root gradle.properties to choose which to use at runtime.
//////    switch (recipe_viewer.toLowerCase(Locale.ROOT)) {
//////        case "jei": modCompileOnly("mezz.jei:jei-${minecraft_version}-fabric:${jei_version}"); break
//////        case "rei": modCompileOnly("me.shedaniel:RoughlyEnoughItems-fabric:${rei_version}"); break
//////        case "emi": modCompileOnly("dev.emi:emi:${emi_version}"); break
//////            // default: println("Unknown recipe viewer specified: ${recipe_viewer}. Must be JEI, REI, EMI, or disabled.")
//////    }
////    modCompileOnly("me.shedaniel:RoughlyEnoughItems-fabric:${rei_version}")
////    modLocalRuntime(files("D:\\CCC\\Documents\\local_maven\\RoughlyEnoughItems-9.1.580.jar"))
////    modLocalRuntime(files("D:\\CCC\\Documents\\local_maven\\architectury-6.4.62-fabric.jar"))
////    modLocalRuntime(files("D:\\CCC\\Documents\\local_maven\\cloth-config-8.2.88-fabric.jar"))
////    modLocalRuntime("me.shedaniel:RoughlyEnoughItems-fabric:${rei_version}")
////    modLocalRuntime("dev.emi:emi:${emi_version}")
////    modLocalRuntime(files("D:\\CCC\\Documents\\local_maven\\enchlevel-langpatch-1.2.3.jar"))
////    modLocalRuntime(files("D:\\CCC\\Documents\\local_maven\\lazydfu-0.1.3.jar"))
////    var common = include("phoupraw.mcmod:PhouprawSCommon:${common_version}")
////    modCompileOnly(common)
////    modLocalRuntime(common)
////    include(modImplementation("phoupraw.mcmod:PhouprawSCommon:${common_version}"))
////    modImplementation(files("D:\\CCC\\Documents\\local_maven\\RoughlyEnoughItems-9.1.580.jar"))
////    modImplementation(files("D:\\CCC\\Documents\\local_maven\\architectury-6.4.62-fabric.jar"))
}

processResources {
    // require dependencies to be the version compiled against or newer
    Map<String, String> properties = new HashMap<>()
    properties.put("version", version)
//    properties.put("mod_id", mod_id)
//    properties.put("archives_base_name", archives_base_name)

    properties.forEach((k, v) -> inputs.property(k, v))

    filesMatching("fabric.mod.json") { expand properties }
}

//machete {
//    // disable machete locally for faster builds
//    enabled = buildNumber != null
//}

tasks.withType(JavaCompile).configureEach {
    it.options.release = Integer.parseInt(sourceCompatibility)
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
    exclude("com/simibubi/create/content/contraptions/components/deployer/DeployerTileEntity.class", "com/simibubi/create/content/contraptions/components/deployer/DeployerTileEntity\$State.class", "com/simibubi/create/content/contraptions/components/deployer/DeployerTileEntity\$Mode.class", "com/simibubi/create/content/contraptions/components/deployer/DeployerTileEntity\$1.class")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        mavenLocal()
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
loom {
    accessWidenerPath = file("src/main/resources/${mod_id}.accesswidener")
    runs {
        // This adds a new gradle task that runs the datagen API: "gradlew runDatagenClient"
        datagenClient {
            inherit client
            name "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
            vmArg "-Dfabric-api.datagen.modid=${mod_id}"

            runDir "build/datagen"
        }
    }
}

// Adds the generated files into the jar you distribute to players.
sourceSets {
    main {
        resources {
            srcDirs += ['src/main/generated']
        }
    }
}